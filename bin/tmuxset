#!/bin/sh

set -u

# ====== 変数の設定 ======
# セッション一覧を変数に代入
tmux_list=$(tmux ls)

# セッションにアタッチされているか確認する関数
settion_check() {

	# セッション名を変数に代入
	settion_name="${1}"

	echo "${tmux_list}" |

	# 区切り文字を":"とスペースに指定,シェル変数をawk変数にに渡す
	awk -F[:" "] -v settion_name="${settion_name}" '

	# 変数"settion_name"セッションにアタッチしていなければ出力
	$NF != "(attached)" && $1 == settion_name{

		print $1

	}
	'

}

# セッションにアタッチされているか確認
edit_settion_check=$(settion_check "edit")
git_settion_check=$(settion_check "git")
# ====== 変数の設定ここまで ======


# tmuxが起動,かつeditセッションにアタッチしていなければ真
if [ -n "${edit_settion_check}" ]; then

	tmux a -t "${edit_settion_check}"

# tmuxが起動していれば真
elif [ -n "${tmux_list}" ]; then

	tmux a -t "${git_settion_check}"

else

	# ホームディレクトリに戻る
	cd "${HOME}" || exit

	# 作成するセッション名を定義
	sessions="edit git docker music network command"

	# tmuxサーバーを起動
	tmux start-server

	# ループで各セッションを作成
	for session in ${sessions}; do

	    tmux new-session -d -s "${session}"

	done

	tmux new-session -d ;

	# 新規ウィンドウを作成
	tmux new-window -t git 
	tmux new-window -t music

	# ペインを分割
	tmux split-window -v -t git
	tmux split-window -v -t docker
	tmux split-window -v -t music
	tmux split-window -v -t network

	# "edit"セッションにアタッチ
	tmux a -t edit

fi

