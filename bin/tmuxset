#!/bin/sh

set -u

# tmuxセッション一覧を取得（1回のみ、エラー時は空文字列）
tmux_list=$(tmux ls 2>/dev/null) || tmux_list=

# セッションの存在とアタッチ状態をチェックする関数
session_status() {

    session_name="${1}"

    echo "${tmux_list}" | awk -F':| ' -v name="${session_name}" '

	$1 == name {

		if ($NF == "(attached)")

			print "attached"

		else 

			print "detached"

	}
	'

}

# 既存セッションのチェック
edit_status=$(session_status "edit")
git_status=$(session_status "git")

# editセッションが存在し、detachedならアタッチ
if [ "${edit_status}" = "detached" ]; then

    exec tmux attach-session -t edit

# gitセッションが存在し、detachedならアタッチ
elif [ "${git_status}" = "detached" ]; then

    exec tmux attach-session -t git

# tmuxが起動していれば、既存のいずれかにアタッチ
elif [ -n "${tmux_list}" ]; then

    exec tmux attach-session

fi

# 新規セッション作成
cd "${HOME}" || exit 1
tmux start-server

# セッションとウィンドウを一括作成
sessions="edit git docker music network command workspace"

for session in ${sessions}; do

    tmux new-session -d -s "${session}"

    case "${session}" in

        edit|workspace)
			;;

        *)
			tmux split-window -v -t "${session}"
			;;

		esac

done

# gitとmusicに追加ウィンドウと分割
tmux new-window -t git
tmux split-window -v -t git
tmux new-window -t music
tmux split-window -v -t music

# editにアタッチ
exec tmux attach-session -t edit

