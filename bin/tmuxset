#!/bin/sh

set -eu

# ====== 変数の設定 ======
# 作成するセッション名を定義
sessions="edit git docker music network command workspace"

# セッションにアタッチされているか確認する関数
session_check() {

	# セッション名を変数に代入
	session_name="${1}"

	# tmuxのセッション一覧を取得
	tmux ls |

	# 区切り文字を":"とスペースに指定,シェル変数をawk変数に渡す
	awk -F':| ' -v session_name="${session_name}" '

	# 変数"session_name"セッションにアタッチしていなければ出力
	$NF != "(attached)" && $1 == session_name{

		print $1

	}
	'

}

# セッションにアタッチされているか確認
edit_session_check=$(session_check "edit")
git_session_check=$(session_check "git")
# ====== 変数の設定ここまで ======


# tmuxが起動,かつeditセッションにアタッチしていなければ真
if [ -n "${edit_session_check}" ]; then

	tmux a -t "${edit_session_check}"

# tmuxが起動していれば真
elif [ -n "${tmux_list}" ]; then

	tmux a -t "${git_session_check}"

else

	# ホームディレクトリに戻る,失敗時にはエラー終了
	cd "${HOME}" || exit 1

	# tmuxサーバーを起動
	tmux start-server

    # セッションとウィンドウを一括作成
	for session in ${sessions}; do

		# 新規セッションを作成
        tmux new-session -d -s "${session}"

        # "edit"及び"command"以外の場合にウィンドウを分割
        case "${session}" in

            edit|command)
				;;

            *)
                tmux split-window -v -t "${session}"
                ;;
        esac

    done

	# 新規ウィンドウを作成
	tmux new-window -t git 
	tmux new-window -t music

	# ウィンドウを分割
	tmux split-window -v -t "git"
	tmux split-window -v -t "music"

	# "edit"セッションにアタッチ
	tmux a -t edit

fi

