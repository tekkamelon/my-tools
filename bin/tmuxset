#!/bin/sh

# ====== 変数の設定 ======
# "git"セッションの確認
git_settion_check=$(

	tmux ls |

	# 第1フィールドが"git:"かつ最終フィールドが"(attached)"ではない場合に真
	awk '$1 == "git:" && $NF != "(attached)"{

		print $0

	}'

)
	
# 未アタッチのセッション一覧の先頭行
last_line=$(

	tmux ls | grep -v "(attached)$" |

	awk -F":" 'NR == 1{print $1}'

)
# ====== 変数の設定ここまで ======


# tmuxが起動し,かつ"git"セッションにアタッチしていなければ真
if [ -n "${TMUX}" ] && [ -n "${git_settion_check}" ] ; then

	# 真の場合は"git"セッションにアタッチ,なければ最後のセッションにアタッチ
	tmux a -t git

# 偽の場合はtmuxが起動していれば真
elif [ -n "${TMUX}" ] ; then

	tmux a -t "${last_line}"

else

	# 偽の場合の処理
	# ホームディレクトリに戻る
	cd "${HOME}" || exit

	# メッセージを標準エラー出力に表示
	echo "make session" 1>&2

	# 新規セッションを作成,即デタッチ
	tmux new-session -d -s edit
	tmux new-session -d -s git 
	tmux new-session -d -s docker
	tmux new-session -d -s music
	tmux new-session -d -s network
	tmux new-session -d -s command 
	tmux new-session -d ;

	# グループ化し並列に処理
	{ 

		# 新規ウィンドウを作成
		tmux new-window -t git &
		tmux new-window -t git &
		tmux new-window -t music &

	}

	{ 

		# ペインを分割
		tmux split-window -v -t git &
		tmux split-window -v -t docker &
		tmux split-window -v -t music &
		tmux split-window -v -t network ;

	}

	# "edit"セッションにアタッチ
	tmux a -t edit

fi

