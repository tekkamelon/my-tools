#!/bin/sh

set -eu

# 環境変数の設定
export LANG=C
export LC_ALL=C
export POSIXLY_CORRECT=1

# geminiとqwenの両方がインストールされてれば真
if command -v gemini > /dev/null 2>&1 && command -v qwen > /dev/null 2>&1; then

	# AIツール選択メニュー
	ai_tool=$(printf "gemini\nqwen\n" | fzf --layout=reverse --prompt=" AIツールを選択 > ")

	# AIツールを選択しなければ終了
	test -z "${ai_tool}" && exit 1

# geminiしかインストールされていなければ真
elif command -v gemini > /dev/null 2>&1; then

	ai_tool=gemini

# qwenしかインストールされていなければ真
elif command -v qwen > /dev/null 2>&1; then

	ai_tool=qwen

# いずれもインストールされていない場合
else

	# AIツール選択メニュー
	cat <<- EOS >&2
		gemini または qwen がインストールされていないか,PATHにありません
		いずれかをインストールしてください
		gemini の場合: npx https://github.com/google-gemini/gemini-cli または npm install -g @google/gemini-cli@latest
		qwen の場合: npm install -g @qwen-code/qwen-code@latest
	EOS

    exit 1

fi

# メニュー項目の定義
menu_items=$(cat <<- EOS
1:git commitの作成
2:git commitの打ち消し
3:READMEへの反映
4:READMEを添削
EOS
)

# 選択処理
selected=$(echo "${menu_items}" | fzf --layout=reverse --prompt=" ${ai_tool}: 操作を選択 > ")
# 変数展開で数値を抽出
extracted="${selected%%:*}"

# 選択処理で受け取った変数に応じプロンプトを変数に代入
case "${extracted}" in

    1)
        message="gitから変更点を確認し適切なコミットを作成してください.コミットの作成時に許可を得る必要はありません"
        ;;
	2)
		message="現在のgit commitをgit revertで打ち消してください.操作時に許可は不要です"
		;;
    3)
        message="gitの履歴を確認し必要であれば@README.mdに追記してください"
        ;;
    4)
        message="@README.mdの内容を添削し変更点を別ファイルに書き出してください"
        ;;
    *)
        exit 1
        ;;

esac

# 選択されたAIツールで実行
case "${ai_tool}" in

    gemini)
        gemini --yolo -p "${message}"
        ;;

    qwen)
        qwen --yolo -p "${message}"
        ;;

esac

